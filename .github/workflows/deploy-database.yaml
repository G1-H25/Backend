name: Deploy SQL to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger from GitHub Actions UI

jobs:
  deploy-sql:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SQLCMD tools
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          sudo apt-add-repository "$(curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list)"
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      - name: Find folder structure and run all .sql files and distrupt if an error is caught
        env:
          AZURE_SQL_SERVER: ${{ secrets.AZURE_SQL_SERVER }}
          AZURE_SQL_USER: ${{ secrets.AZURE_SQL_USER }}
          AZURE_SQL_PASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
          AZURE_SQL_DB: ${{ secrets.AZURE_SQL_DB }}
        run: |

          set -e

          for script in $(find scripts/sql/ -type f -name "*.sql" | sort ); do
            if [[ "$(basename "$script")" == "init.sql" ]]; then
              echo "Skipping init.sql in production: $script"
              continue
            fi

            echo "Running: $script"
            /opt/mssql-tools/bin/sqlcmd \
            -S "$AZURE_SQL_SERVER" \
            -U "$AZURE_SQL_USER" \
            -P "$AZURE_SQL_PASSWORD" \
            -d "$AZURE_SQL_DB" \
            -i "$script" \
            -C
          done

